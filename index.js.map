{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst myApiKey = \"48961514-d720aad073d42be14fd4daf93\";\r\nconst URL = \"https://pixabay.com/api/\";\r\n\r\nexport async function axiosImages(query, currentPage = 1) {\r\n    try {\r\n        const response = await axios.get(URL, {\r\n            params: {\r\n                key: myApiKey,\r\n                q: query,\r\n                image_type: \"photo\",\r\n                orientation: \"horizontal\",\r\n                safesearch: \"true\",\r\n                page: currentPage,\r\n                per_page: 15\r\n            },\r\n        });\r\n\r\n        return {\r\n            images: response.data.hits,\r\n            totalHits: response.data.totalHits\r\n        };\r\n    } catch (error) {\r\n        console.error(\"Error fetching images:\", error);\r\n        iziToast.error({\r\n            message: \"An error occurred while fetching images. Please try again!\",\r\n            position: \"topRight\",\r\n            messageColor: \"#FAFAFB\",\r\n            backgroundColor: \"#EF4040\"\r\n        });\r\n        return { images: [], totalHits: 0 };\r\n    }\r\n}\r\n","import SimpleLightbox from \"simplelightbox\";\r\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\r\n\r\nconst gallery = document.querySelector(\".gallery\");\r\n\r\n// Ініціалізація SimpleLightbox один раз\r\nconst lightbox = new SimpleLightbox(\".gallery a\", {\r\n    captionsData: \"alt\",\r\n    captionDelay: 250,\r\n});\r\n\r\n// Функція очищення галереї\r\nexport function clearGallery() {\r\n    gallery.innerHTML = \"\";\r\n}\r\n\r\nexport function displayImages(images) {\r\n    clearGallery(); // Очищення галереї перед додаванням нових зображень\r\n\r\n    const markup = images\r\n        .map(\r\n            (image) => `\r\n        <li class=\"img-card\">\r\n            <a href=\"${image.largeImageURL}\">\r\n                <img \r\n                    src=\"${image.webformatURL}\" \r\n                    alt=\"${image.tags}\" \r\n                    data-source=\"${image.largeImageURL}\" \r\n                />\r\n            </a>\r\n            <div class=\"image-info\">\r\n                <p><strong>Likes:</strong> ${image.likes}</p>\r\n                <p><strong>Views:</strong> ${image.views}</p>\r\n                <p><strong>Comments:</strong> ${image.comments}</p>\r\n                <p><strong>Downloads:</strong> ${image.downloads}</p>\r\n            </div>\r\n        </li>`\r\n        )\r\n        .join(\"\");\r\n\r\n    gallery.insertAdjacentHTML('beforeend', markup);\r\n\r\n    // Оновлення lightbox після додавання нових зображень\r\n    lightbox.refresh();\r\n}\r\n","import iziToast from \"izitoast\";\r\nimport \"izitoast/dist/css/iziToast.min.css\";\r\nimport { axiosImages } from \"./js/pixabay-api\";\r\nimport { displayImages, clearGallery } from \"./js/render-functions\";\r\n\r\nconst form = document.querySelector(\"form\");\r\nconst loadingMessage = document.querySelector(\".loader-first\");\r\nconst loadingBottom = document.querySelector(\".loader-bottom\");\r\nconst btnLoadMore = document.querySelector(\".btn-loadmore\");\r\nconst gallery = document.querySelector(\".gallery\");\r\n\r\nlet currentPage = 1;\r\nlet previousSearch = \"\";\r\nlet userQuery = \"\";\r\nlet totalHits = 0;\r\n\r\nform.addEventListener(\"submit\", async (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const input = evt.target.querySelector(\"input\");\r\n    const inputValue = input.value.trim();\r\n\r\n    if (!inputValue) {\r\n        iziToast.error({\r\n            message: \"Please fill in the field!\",\r\n            position: \"topRight\",\r\n            messageColor: \"#FAFAFB\",\r\n            backgroundColor: \"#EF4040\"\r\n        });\r\n        return;\r\n    }\r\n\r\n    if (inputValue !== previousSearch) {\r\n        currentPage = 1;\r\n        previousSearch = inputValue;\r\n        userQuery = inputValue;\r\n\r\n        // Очищаємо галерею при новому пошуку\r\n        clearGallery();\r\n\r\n        // Приховуємо кнопку \"Load More\" при новому пошуку\r\n        btnLoadMore.style.display = \"none\";\r\n    }\r\n\r\n    if (loadingMessage) loadingMessage.style.display = \"block\"; // Показуємо лоадер\r\n\r\n    try {\r\n        const { images, totalHits: newTotalHits } = await axiosImages(userQuery, currentPage);\r\n        totalHits = newTotalHits; // Оновлення глобальної змінної\r\n\r\n        if (!images?.length) {\r\n            iziToast.warning({\r\n                message: \"Sorry, there are no images matching your search query. Please try again!\",\r\n                position: \"topRight\",\r\n                messageColor: \"#FAFAFB\",\r\n                backgroundColor: \"#EF4040\"\r\n            });\r\n            btnLoadMore.style.display = \"none\"; // Ховаємо кнопку, якщо немає результатів\r\n            return;\r\n        }\r\n\r\n        displayImages(images, currentPage);\r\n        currentPage++;\r\n\r\n        // Перевіряємо, чи залишилися ще зображення\r\n        btnLoadMore.style.display = currentPage * 15 < totalHits ? \"block\" : \"none\";\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        iziToast.error({\r\n            message: \"Failed to fetch images. Please check your internet connection.\",\r\n            position: \"topRight\",\r\n            messageColor: \"#FAFAFB\",\r\n            backgroundColor: \"#EF4040\"\r\n        });\r\n    } finally {\r\n        if (loadingMessage) loadingMessage.style.display = \"none\"; // Ховаємо лоадер\r\n    }\r\n\r\n    form.reset();\r\n});\r\n\r\nbtnLoadMore.addEventListener(\"click\", async () => {\r\n    btnLoadMore.style.display = \"none\"; // Ховаємо кнопку перед запитом\r\n    if (loadingBottom) loadingBottom.style.display = \"block\"; // Показуємо лоадер\r\n\r\n    try {\r\n        const { images } = await axiosImages(userQuery, currentPage);\r\n\r\n        if (!images?.length) {\r\n            btnLoadMore.style.display = \"none\"; // Якщо зображень немає, приховуємо кнопку\r\n            return;\r\n        }\r\n\r\n        displayImages(images, currentPage);\r\n        currentPage++;\r\n\r\n        // Відображаємо кнопку, якщо ще є зображення\r\n        btnLoadMore.style.display = currentPage * 15 < totalHits ? \"block\" : \"none\";\r\n        scrollToNextImages();\r\n    } catch (error) {\r\n        console.error(error);\r\n        iziToast.error({\r\n            message: \"Error loading more images\",\r\n            position: \"topRight\",\r\n            messageColor: \"#FAFAFB\",\r\n            backgroundColor: \"#EF4040\"\r\n        });\r\n    } finally {\r\n        if (loadingBottom) loadingBottom.style.display = \"none\"; // Ховаємо лоадер після завантаження\r\n    }\r\n});\r\n\r\nfunction scrollToNextImages() {\r\n    const firstImageCard = document.querySelector(\".img-card\");\r\n    if (firstImageCard) {\r\n        const cardHeight = firstImageCard.getBoundingClientRect().height;\r\n        window.scrollBy({ top: cardHeight * 2, behavior: \"smooth\" });\r\n    }\r\n}\r\n"],"names":["myApiKey","URL","axiosImages","query","currentPage","response","axios","error","gallery","lightbox","SimpleLightbox","clearGallery","displayImages","images","markup","image","form","loadingMessage","loadingBottom","btnLoadMore","previousSearch","userQuery","totalHits","evt","inputValue","iziToast","newTotalHits","scrollToNextImages","firstImageCard","cardHeight"],"mappings":"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"}